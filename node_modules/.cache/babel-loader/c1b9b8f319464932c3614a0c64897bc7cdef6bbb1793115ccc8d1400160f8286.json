{"ast":null,"code":"var _jsxFileName = \"/Users/momoon/Documents/ReactProjects/my-app/src/QuoteCheck.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n//import * as React from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Button, Heading } from \"@chakra-ui/react\";\nimport Layout from \"./Layout\";\nimport { getQueriesForElement } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FetchQuote() {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [todo, setTodo] = useState(1);\n  useEffect(() => {\n    getQuote();\n    const intervalID = setInterval(() => {\n      getQuote();\n    }, 24 * 60 * 60 * 1000);\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n  function getQuote() {\n    let url = 'https://jsonplaceholder.typicode.com/todos/1';\n    url = url + todo;\n    fetch(url).then(response => response.json()).then(data => {\n      try {\n        setQuote(data.title);\n      } catch {\n        setQuote('Error getting quote');\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Quote: \", quote]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(FetchQuote, \"yVkaDpQ0SFEpA2vNmEW+57PL5ZM=\");\n_c = FetchQuote;\nfunction handleRandomQuote() {\n  setTodo = Math.floor(Math.random() * 200) + 1;\n}\nfunction QuoteCheck() {\n  _s2();\n  const [showQuote, setShowQuote] = useState(false);\n  const handleButtonClick = show => {\n    setShowQuote(show);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: \"5\",\n      borderWidth: \"1px\",\n      borderRadius: \"md\",\n      boxShadow: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(true),\n        children: \"Get Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(false),\n        children: \"HideQuote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), showQuote && /*#__PURE__*/_jsxDEV(FetchQuote, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRandomQuote(),\n        children: \"randomize Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        as: \"a\",\n        href: \"/\",\n        size: \"sm\",\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s2(QuoteCheck, \"45sf85XZcERTk/U+8ThjlRXH+k0=\");\n_c2 = QuoteCheck;\nexport default QuoteCheck;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchQuote\");\n$RefreshReg$(_c2, \"QuoteCheck\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Heading","Layout","getQueriesForElement","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchQuote","_s","quote","setQuote","loading","setLoading","todo","setTodo","getQuote","intervalID","setInterval","clearInterval","url","fetch","then","response","json","data","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleRandomQuote","Math","floor","random","QuoteCheck","_s2","showQuote","setShowQuote","handleButtonClick","show","p","borderWidth","borderRadius","boxShadow","onClick","colorScheme","as","href","size","_c2","$RefreshReg$"],"sources":["/Users/momoon/Documents/ReactProjects/my-app/src/QuoteCheck.js"],"sourcesContent":["//import * as React from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Button, Heading } from \"@chakra-ui/react\";\nimport Layout from \"./Layout\";\nimport { getQueriesForElement } from \"@testing-library/react\";\n\nfunction FetchQuote() {\n    const [quote,setQuote] = useState('');\n    const [loading,setLoading] = useState(true);\n    const [todo, setTodo] = useState(1);\n\n    useEffect(()=>{\n        getQuote();\n        const intervalID = setInterval(()=>{\n            getQuote()\n        }, 24*60*60*1000);\n    return ()=>{\n        clearInterval(intervalID);\n    }\n    },[])\n    function getQuote(){\n        let url = 'https://jsonplaceholder.typicode.com/todos/1';\n        url = url + todo;\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            try {\n                setQuote(data.title)\n            } catch {\n                setQuote('Error getting quote')\n            }\n        })\n    }\n    return(\n        <>\n        <p>Quote: {quote}</p>\n        </>\n    )\n}\nfunction handleRandomQuote() {\n    setTodo = Math.floor(Math.random() * 200) + 1;\n}\n\nfunction QuoteCheck() {\n    const [showQuote, setShowQuote] = useState(false);\n\n    const handleButtonClick = (show) => {\n        setShowQuote(show);\n    };\n\n    return (\n        <Layout>\n            <Box p=\"5\" borderWidth=\"1px\" borderRadius=\"md\" boxShadow=\"md\">\n                <button onClick={() => handleButtonClick(true)}>Get Quote</button>\n                <br/>\n                <button onClick={() => handleButtonClick(false)}>HideQuote</button>\n                <br/>\n                {showQuote && <FetchQuote />}\n                <button onClick={() => handleRandomQuote()}>randomize Quote</button>\n                <br/>\n                <Button colorScheme=\"blue\" as=\"a\" href=\"/\" size=\"sm\">\n                    Go back\n                </Button>\n            </Box>\n\n        </Layout>\n    );\n}\n\nexport default QuoteCheck;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}