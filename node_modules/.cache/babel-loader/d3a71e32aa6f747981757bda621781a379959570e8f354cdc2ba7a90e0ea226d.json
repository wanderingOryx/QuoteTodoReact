{"ast":null,"code":"var _jsxFileName = \"/Users/momoon/Documents/ReactProjects/my-app/src/QuoteCheck.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Import statements remain the same\n\nvar todoG = 1; // Initial value for todo (using `var` for consistency with the original code)\n\nfunction FetchQuote(todo) {\n  _s();\n  const [quote, setQuote] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getQuote(); // Fetch quote when the component mounts or the todo prop changes\n  }, [todo]); // Dependency array: update the effect when todo changes\n\n  function getQuote() {\n    console.log(\"get\");\n    let url = \"https://jsonplaceholder.typicode.com/todos/\";\n    url += todo;\n    fetch(url).then(response => response.json()).then(data => {\n      try {\n        setQuote(data.title);\n      } catch {\n        setQuote(\"Error getting quote\");\n      }\n    }).finally(() => setLoading(false)); // Set loading to false after fetching\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Quote \", todo, \": \", quote, \" \", loading && \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(FetchQuote, \"9gV9RqgrcPPiKQAKRKqNmYx5EWs=\");\n_c = FetchQuote;\nfunction handleRandomQuote() {\n  let newTodo = Math.floor(Math.random() * 200) + 1;\n  // Call FetchQuote with the new random todo as a prop\n  return /*#__PURE__*/_jsxDEV(FetchQuote, {\n    todo: newTodo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this); // Pass the random todo as a prop\n}\nfunction QuoteCheck() {\n  _s2();\n  const [showQuote, setShowQuote] = useState(false);\n  const handleButtonClick = show => {\n    setShowQuote(show);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: \"5\",\n      borderWidth: \"1px\",\n      borderRadius: \"md\",\n      boxShadow: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(true),\n        children: \"Get Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(false),\n        children: \"Hide Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), showQuote && /*#__PURE__*/_jsxDEV(FetchQuote, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRandomQuote,\n        children: \"Randomize Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        as: \"a\",\n        href: \"/\",\n        size: \"sm\",\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuoteCheck, \"45sf85XZcERTk/U+8ThjlRXH+k0=\");\n_c2 = QuoteCheck;\nexport default QuoteCheck;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchQuote\");\n$RefreshReg$(_c2, \"QuoteCheck\");","map":{"version":3,"names":["todoG","FetchQuote","todo","_s","quote","setQuote","useState","loading","setLoading","useEffect","getQuote","console","log","url","fetch","then","response","json","data","title","finally","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleRandomQuote","newTodo","Math","floor","random","QuoteCheck","_s2","showQuote","setShowQuote","handleButtonClick","show","Layout","Box","p","borderWidth","borderRadius","boxShadow","onClick","Button","colorScheme","as","href","size","_c2","$RefreshReg$"],"sources":["/Users/momoon/Documents/ReactProjects/my-app/src/QuoteCheck.js"],"sourcesContent":["// Import statements remain the same\n\nvar todoG = 1; // Initial value for todo (using `var` for consistency with the original code)\n\nfunction FetchQuote(todo) {\n  const [quote, setQuote] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getQuote(); // Fetch quote when the component mounts or the todo prop changes\n  }, [todo]); // Dependency array: update the effect when todo changes\n\n  function getQuote() {\n    console.log(\"get\");\n    let url = \"https://jsonplaceholder.typicode.com/todos/\";\n    url += todo;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        try {\n          setQuote(data.title);\n        } catch {\n          setQuote(\"Error getting quote\");\n        }\n      })\n      .finally(() => setLoading(false)); // Set loading to false after fetching\n  }\n\n  return (\n    <>\n      <p>Quote {todo}: {quote} {loading && \"Loading...\"}</p>\n    </>\n  );\n}\n\nfunction handleRandomQuote() {\n  let newTodo = Math.floor(Math.random() * 200) + 1;\n  // Call FetchQuote with the new random todo as a prop\n  return <FetchQuote todo={newTodo} />; // Pass the random todo as a prop\n}\n\nfunction QuoteCheck() {\n  const [showQuote, setShowQuote] = useState(false);\n\n  const handleButtonClick = (show) => {\n    setShowQuote(show);\n  };\n\n  return (\n    <Layout>\n      <Box p=\"5\" borderWidth=\"1px\" borderRadius=\"md\" boxShadow=\"md\">\n        <button onClick={() => handleButtonClick(true)}>Get Quote</button>\n        <br />\n        <button onClick={() => handleButtonClick(false)}>Hide Quote</button>\n        <br />\n        {showQuote && <FetchQuote />}\n        <button onClick={handleRandomQuote}>Randomize Quote</button>\n        <br />\n        <Button colorScheme=\"blue\" as=\"a\" href=\"/\" size=\"sm\">\n          Go back\n        </Button>\n      </Box>\n    </Layout>\n  );\n}\n\nexport default QuoteCheck;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}