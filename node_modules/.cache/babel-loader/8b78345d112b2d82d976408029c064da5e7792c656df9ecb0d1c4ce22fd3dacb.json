{"ast":null,"code":"var _jsxFileName = \"/Users/momoon/Documents/ReactProjects/my-app/src/QuoteCheck.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FetchQuote() {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [todo, setTodo] = useState(1);\n  useEffect(() => {\n    getQuote();\n    const intervalID = setInterval(() => {\n      getQuote();\n    }, 24 * 60 * 60 * 1000);\n\n    // Update todo whenever handleRandomQuote runs\n    handleRandomQuote();\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n  function getQuote() {\n    let url = `https://jsonplaceholder.typicode.com/todos/${todo}`;\n    // Rest of your fetch logic...\n  }\n  function handleRandomQuote() {\n    setTodo(Math.floor(Math.random() * 200) + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Quote \", todo, \": \", quote]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(FetchQuote, \"tsd2nrCCWzvFRednRrnJCg1DLAs=\");\n_c = FetchQuote;\nfunction QuoteCheck() {\n  _s2();\n  const [showQuote, setShowQuote] = useState(false);\n  const handleButtonClick = show => {\n    setShowQuote(show);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: \"5\",\n      borderWidth: \"1px\",\n      borderRadius: \"md\",\n      boxShadow: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(true),\n        children: \"Get Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(false),\n        children: \"Hide Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), showQuote && /*#__PURE__*/_jsxDEV(FetchQuote, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRandomQuote(),\n        children: \"Randomize Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        as: \"a\",\n        href: \"/\",\n        size: \"sm\",\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s2(QuoteCheck, \"45sf85XZcERTk/U+8ThjlRXH+k0=\");\n_c2 = QuoteCheck;\nexport default QuoteCheck;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchQuote\");\n$RefreshReg$(_c2, \"QuoteCheck\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchQuote","_s","quote","setQuote","loading","setLoading","todo","setTodo","getQuote","intervalID","setInterval","handleRandomQuote","clearInterval","url","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","QuoteCheck","_s2","showQuote","setShowQuote","handleButtonClick","show","Layout","Box","p","borderWidth","borderRadius","boxShadow","onClick","Button","colorScheme","as","href","size","_c2","$RefreshReg$"],"sources":["/Users/momoon/Documents/ReactProjects/my-app/src/QuoteCheck.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction FetchQuote() {\n    const [quote, setQuote] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [todo, setTodo] = useState(1);\n\n    useEffect(() => {\n        getQuote();\n        const intervalID = setInterval(() => {\n            getQuote();\n        }, 24 * 60 * 60 * 1000);\n\n        // Update todo whenever handleRandomQuote runs\n        handleRandomQuote();\n\n        return () => {\n            clearInterval(intervalID);\n        };\n    }, []);\n\n    function getQuote() {\n        let url = `https://jsonplaceholder.typicode.com/todos/${todo}`;\n        // Rest of your fetch logic...\n    }\n\n    function handleRandomQuote() {\n        setTodo(Math.floor(Math.random() * 200) + 1);\n    }\n\n    return (\n        <>\n            <p>Quote {todo}: {quote}</p>\n        </>\n    );\n}\n\nfunction QuoteCheck() {\n    const [showQuote, setShowQuote] = useState(false);\n\n    const handleButtonClick = (show) => {\n        setShowQuote(show);\n    };\n\n    return (\n        <Layout>\n            <Box p=\"5\" borderWidth=\"1px\" borderRadius=\"md\" boxShadow=\"md\">\n                <button onClick={() => handleButtonClick(true)}>Get Quote</button>\n                <br/>\n                <button onClick={() => handleButtonClick(false)}>Hide Quote</button>\n                <br/>\n                {showQuote && <FetchQuote />}\n                <button onClick={() => handleRandomQuote()}>Randomize Quote</button>\n                <br/>\n                <Button colorScheme=\"blue\" as=\"a\" href=\"/\" size=\"sm\">\n                    Go back\n                </Button>\n            </Box>\n        </Layout>\n    );\n}\n\nexport default QuoteCheck;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}